{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/c141/cursus/red_tetris/src/client/src/components/roomList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Room = ({\n  room,\n  jointRoom\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [room.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), \"nb_players : \", room.players.length, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/room/${room.id}`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jointRoom(room.id),\n        children: \"JOINT ROOM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n_c = Room;\n\nconst RoomList = ({\n  rooms,\n  createRoom,\n  getRoomList,\n  jointRoom\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => createRoom('PAYLOAD/game_opts?'),\n    children: \"CREATE ROOM\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => getRoomList('PAYLOAD/filters?'),\n    children: \"GET ROOM LIST\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), \"ROOMLIST (\", rooms.length, \" room)\", rooms.map(room => /*#__PURE__*/_jsxDEV(Room, {\n    jointRoom: jointRoom,\n    room: room\n  }, room.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n\n_c2 = RoomList;\n\nfunction createRoomAction(options) {\n  return {\n    type: 'CREATE_ROOM',\n    payload: options\n  };\n}\n\nfunction getRoomListAction(filters) {\n  return {\n    type: 'GET_ROOM_LIST',\n    payload: filters\n  };\n}\n\nfunction jointRoomAction(roomId) {\n  return {\n    type: 'JOINT_ROOM',\n    payload: roomId\n  };\n}\n\nconst mapStateToProps = state => ({\n  rooms: state.rooms\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createRoom: options => dispatch(createRoomAction(options)),\n  getRoomList: filters => dispatch(getRoomListAction(filters)),\n  jointRoom: roomId => dispatch(jointRoomAction(roomId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Room\");\n$RefreshReg$(_c2, \"RoomList\");","map":{"version":3,"sources":["/home/c141/cursus/red_tetris/src/client/src/components/roomList.js"],"names":["React","Link","connect","Room","room","jointRoom","id","players","length","RoomList","rooms","createRoom","getRoomList","map","createRoomAction","options","type","payload","getRoomListAction","filters","jointRoomAction","roomId","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,kBACX;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,eACGD,IAAI,CAACE,EADR,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,mBAGgBF,IAAI,CAACG,OAAL,CAAaC,MAH7B,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,SAAQJ,IAAI,CAACE,EAAG,EAA3B;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAG,MAAMD,SAAS,CAACD,IAAI,CAACE,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMH,I;;AAiBN,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,WAArB;AAAkCP,EAAAA;AAAlC,CAAD,kBACf;AAAA,0BACE;AAAA;AAAA;AAAA;AAAA,UADF,eAGE;AAAQ,IAAA,OAAO,EAAG,MAAMM,UAAU,CAAC,oBAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,eAME;AAAQ,IAAA,OAAO,EAAG,MAAMC,WAAW,CAAC,kBAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,eAUE;AAAA;AAAA;AAAA;AAAA,UAVF,gBAcIF,KAAK,CAACF,MAdV,YAgBIE,KAAK,CAACG,GAAN,CAAWT,IAAD,iBACR,QAAC,IAAD;AACE,IAAA,SAAS,EAAEC,SADb;AAGE,IAAA,IAAI,EAAED;AAHR,KAEOA,IAAI,CAACE,EAFZ;AAAA;AAAA;AAAA;AAAA,UADF,CAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMG,Q;;AA4BN,SAASK,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;;AAED,SAASG,iBAAT,CAA2BC,OAA3B,EAAoC;AAClC,SAAO;AACLH,IAAAA,IAAI,EAAE,eADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;;AAED,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAE,YADD;AAELC,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID;;AAED,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCb,EAAAA,KAAK,EAAEa,KAAK,CAACb;AADqB,CAAZ,CAAxB;;AAIA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCd,EAAAA,UAAU,EAAGI,OAAD,IAAaU,QAAQ,CAACX,gBAAgB,CAACC,OAAD,CAAjB,CADO;AAExCH,EAAAA,WAAW,EAAGO,OAAD,IAAaM,QAAQ,CAACP,iBAAiB,CAACC,OAAD,CAAlB,CAFM;AAGxCd,EAAAA,SAAS,EAAGgB,MAAD,IAAYI,QAAQ,CAACL,eAAe,CAACC,MAAD,CAAhB;AAHS,CAAf,CAA3B;;AAMA,eAAenB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nconst Room = ({ room, jointRoom }) => (\n  <div>\n    <hr />\n    <div>\n      {room.id}\n      <br />\n      nb_players : {room.players.length}\n      <br />\n      <Link to={`/room/${room.id}`}>\n        <button onClick={ () => jointRoom(room.id) } >\n          JOINT ROOM\n        </button>\n      </Link>\n    </div>\n  </ div>\n)\n\nconst RoomList = ({ rooms, createRoom, getRoomList, jointRoom }) => (\n  <div>\n    <hr />\n\n    <button onClick={ () => createRoom('PAYLOAD/game_opts?') } >\n      CREATE ROOM\n    </button>\n    <button onClick={ () => getRoomList('PAYLOAD/filters?') } >\n      GET ROOM LIST\n    </button>\n\n    <hr />\n\n    ROOMLIST\n\n    ({rooms.length} room)\n    {\n      rooms.map((room) =>\n        <Room\n          jointRoom={jointRoom}\n          key={room.id}\n          room={room}\n        />\n      )\n    }\n  </ div>\n)\n\nfunction createRoomAction(options) {\n  return {\n    type: 'CREATE_ROOM',\n    payload: options,\n  }\n}\n\nfunction getRoomListAction(filters) {\n  return {\n    type: 'GET_ROOM_LIST',\n    payload: filters,\n  }\n}\n\nfunction jointRoomAction(roomId) {\n  return {\n    type: 'JOINT_ROOM',\n    payload: roomId,\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  rooms: state.rooms,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  createRoom: (options) => dispatch(createRoomAction(options)),\n  getRoomList: (filters) => dispatch(getRoomListAction(filters)),\n  jointRoom: (roomId) => dispatch(jointRoomAction(roomId)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomList);\n"]},"metadata":{},"sourceType":"module"}