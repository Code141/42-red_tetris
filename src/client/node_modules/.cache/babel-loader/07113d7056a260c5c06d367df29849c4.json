{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/c141/cursus/red_tetris/src/client/src/containers/game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport useKeyboardEvent from '../hooks/keyboard';\nimport Board from '../components/board';\n\nconst AdminPanel = ({\n  startGame\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"ADMIN PANNEL\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => startGame('PAYLOAD/roomId?'),\n    children: \"startGame\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = AdminPanel;\n\nconst Game = ({\n  game,\n  leaveRoom,\n  startGame,\n  move\n}) => {\n  _s();\n\n  useKeyboardEvent('ArrowLeft', () => {\n    move('STRAFE_LEFT');\n  });\n  useKeyboardEvent('ArrowRight', () => {\n    move('STRAFE_RIGHT');\n  });\n  let boards = '';\n\n  if (game.gameHasStarted) {\n    boards = game.players.map((player, index) => /*#__PURE__*/_jsxDEV(Board, {\n      game: game,\n      player: player\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: [\"gameID: \", game.id, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"admin: \", game.admin, /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdminPanel, {\n      startGame: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \"gameHasStarted: \", game.gameHasStarted ? 'TRUE' : 'FALSE', /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"start in\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \"tick: \", game.tick, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \"PLAYERS :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), game.players.map(player => `${player.id}: ${player.username}`), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), \"SPECTATORS :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), game.spectators.map(spectator => `${spectator.id}: ${spectator.username}`), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => leaveRoom('PAYLOAD/roomId?'),\n      children: \"LEAVE_ROOM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), boards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"tF4X7yS9fY0xmjYCq0n8xYdLKqk=\", false, function () {\n  return [useKeyboardEvent, useKeyboardEvent];\n});\n\n_c2 = Game;\n\nfunction leaveRoomAction(roomId) {\n  return {\n    type: 'LEAVE_ROOM',\n    payload: roomId\n  };\n}\n\nfunction startGameAction(roomId) {\n  return {\n    type: 'START_GAME',\n    payload: roomId\n  };\n}\n\nfunction moveAction(move) {\n  return {\n    type: 'MOVE',\n    payload: move\n  };\n}\n\nconst mapStateToProps = state => ({\n  game: state.game\n});\n\nconst mapDispatchToProps = dispatch => ({\n  leaveRoom: roomId => dispatch(leaveRoomAction(roomId)),\n  startGame: roomId => dispatch(startGameAction(roomId)),\n  move: move => dispatch(moveAction(move))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminPanel\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"sources":["/home/c141/cursus/red_tetris/src/client/src/containers/game.js"],"names":["React","connect","useKeyboardEvent","Board","AdminPanel","startGame","Game","game","leaveRoom","move","boards","gameHasStarted","players","map","player","index","id","admin","tick","username","spectators","spectator","leaveRoomAction","roomId","type","payload","startGameAction","moveAction","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport useKeyboardEvent from '../hooks/keyboard'\nimport Board from '../components/board'\n\nconst AdminPanel = ({ startGame }) => (\n  <div>\n    ADMIN PANNEL\n    <br />\n    <button onClick={() => startGame('PAYLOAD/roomId?')}>\n      startGame\n    </button>\n  </div>\n)\n\nconst Game = ({ game, leaveRoom, startGame, move }) => {\n\n  useKeyboardEvent('ArrowLeft', () => { move('STRAFE_LEFT') });\n  useKeyboardEvent('ArrowRight', () => { move('STRAFE_RIGHT') });\n\n  let boards = '';\n\n  if (game.gameHasStarted) {\n    boards = game.players.map((player, index) => (\n      <Board\n        game={game}\n        key={index}\n        player={player}\n      />\n    ));\n  }\n\n  return (\n    <div className='wrap'>\n      gameID: {game.id}\n      <br />\n      admin: {game.admin}\n      <hr />\n      <AdminPanel startGame={startGame} />\n      <hr />\n      gameHasStarted: {(game.gameHasStarted) ? 'TRUE' : 'FALSE'}\n      <hr />\n      start in\n      <br />\n      tick: {game.tick}\n      <br />\n      PLAYERS :\n      <br />\n      { game.players.map((player) => (`${player.id}: ${player.username}`)) }\n      <br />\n      SPECTATORS :\n      <br />\n      { game.spectators.map((spectator) => (`${spectator.id}: ${spectator.username}`)) }\n\n      <button onClick={ () => leaveRoom('PAYLOAD/roomId?') }>\n        LEAVE_ROOM\n      </button>\n\n      <hr />\n\n      { boards }\n\n    </div>\n  )\n}\n\nfunction leaveRoomAction(roomId) {\n  return {\n    type: 'LEAVE_ROOM',\n    payload: roomId,\n  }\n}\n\nfunction startGameAction(roomId) {\n  return {\n    type: 'START_GAME',\n    payload: roomId,\n  }\n}\n\nfunction moveAction(move) {\n  return {\n    type: 'MOVE',\n    payload: move,\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  leaveRoom: (roomId) => dispatch(leaveRoomAction(roomId)),\n  startGame: (roomId) => dispatch(startGameAction(roomId)),\n  move: (move) => dispatch(moveAction(move)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}